name: build

on:
  # Temporarily disabled from auto triggers; manual only.
  workflow_dispatch: {}

jobs:
  linux-release:
    if: ${{ false }}
    runs-on: ubuntu-latest
    container: drogonframework/drogon:latest
    steps:
      - uses: actions/checkout@v4
      - name: Install deps
        run: |
          apt-get update
          apt-get install -y cmake ninja-build git
      - name: Configure
        run: |
          cmake -S . -B build -G Ninja -DCMAKE_BUILD_TYPE=Release \
            -Wno-dev
      - name: Build
        run: cmake --build build -j
      - name: Package artifact
        run: |
          mkdir -p dist/linux
          cp build/karing dist/linux/karing-ubuntu
          cp -r config dist/linux/
      - name: Upload artifact
        uses: actions/upload-artifact@v4
        with:
          name: karing-ubuntu
          path: dist/linux

  macos-release:
    if: ${{ false }}
    runs-on: macos-latest
    steps:
      - uses: actions/checkout@v4
      - name: Install deps
        env:
          HOMEBREW_NO_AUTO_UPDATE: "1"
          HOMEBREW_NO_INSTALL_CLEANUP: "1"
        run: |
          brew install drogon openssl@3
      - name: Configure
        run: |
          OPENSSL_ROOT_DIR=$(brew --prefix openssl@3) \
          cmake -S . -B build -DCMAKE_BUILD_TYPE=Release -DOPENSSL_ROOT_DIR=$OPENSSL_ROOT_DIR
      - name: Build
        run: cmake --build build -j
      - name: Package artifact
        run: |
          mkdir -p dist/macos
          cp build/karing dist/macos/karing-macos
          cp -r config dist/macos/
      - name: Upload artifact
        uses: actions/upload-artifact@v4
        with:
          name: karing-macos
          path: dist/macos

  release:
    if: ${{ false }}
    needs: [ linux-release, macos-release ]
    runs-on: ubuntu-latest
    steps:
      - uses: actions/download-artifact@v4
        with:
          path: artifacts
      - name: Create GitHub Release
        uses: softprops/action-gh-release@v1
        with:
          files: |
            artifacts/**/karing-*
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
